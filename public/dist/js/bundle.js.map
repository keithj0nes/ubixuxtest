{"version":3,"sources":["app.js","controllers/loginController.js","controllers/mainController.js","services/loginService.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$scope","loginService","$location","console","log","alert","createAccount","org_name","name_first","name_last","email","password","newUserInfo","emailExists","email_feedback","passNotMatch","pass_confirm_feedback","confirm_password","then","res","accountExists","path","returnUserLogin","returnUserInfo","returnAccount","return_feedback","accountCredentials","mainService","torf","hideOrg","inputTodo","updateTodo","todo","toDoArray","archivedArray","getTodoList","setCompleted","deleteTodo","id","deleteCompleted","i","length","completed","ar","push","archiveCompleted","setTimeout","addTodo","archived","todoTotal","todoText","archivedTotal","archivedText","archivedt","addLastItem","logoutUser","getUsername","userName","userOrg","getUsersInOrg","usersInOrg","service","$http","method","data","x","dataObj","success","response","todoId","setarchivetrue","datecompleted","Date","todoObj","updatedObj","name"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module(\"toDoApp\", [\"ui.router\"])\n  .config(function($stateProvider, $urlRouterProvider){\n\n    $stateProvider\n      .state(\"login\", {\n        url: \"/\",\n        templateUrl: \"views/login.html\",\n        controller: \"loginController\"\n      })\n      .state(\"home\", {\n        url: \"/home\",\n        templateUrl: \"views/home.html\",\n        controller: \"mainController\"\n      })\n\n    $urlRouterProvider\n      .otherwise(\"/\")\n\n  })\n","angular.module(\"toDoApp\").controller(\"loginController\", function($scope, loginService, $location){\n\n  console.log(\"PLEASE DO NOT USE REAL PASSWORD! Please use dummy email and password for testing purposes\");\n  alert(\"PLEASE DO NOT USE REAL PASSWORD! Please use dummy email and password for testing purposes\");\n\n  $scope.createAccount = function(org_name, name_first, name_last, email, password){\n    let newUserInfo = {\n      org_name: org_name,\n      name_first: name_first,\n      name_last: name_last,\n      email: email,\n      password: password,\n    }\n\n    $scope.emailExists = false;\n    $scope.email_feedback = \"\";\n    $scope.passNotMatch = false;\n    $scope.pass_confirm_feedback = \"\";\n\n    if(password != $scope.confirm_password){\n      $scope.passNotMatch = true;\n      $scope.pass_confirm_feedback = \"**Passwords must match**\";\n    } else {\n      loginService.createAccount(newUserInfo).then(function(res){\n        if(res.accountExists === true){\n          $scope.emailExists = true;\n          $scope.email_feedback = \"**Account already exists for that email address**\";\n        } else {\n          $location.path(\"/home\");\n        }\n      });\n    }\n  }\n\n\n  $scope.returnUserLogin = function(email, password){\n    let returnUserInfo = {\n      email: email,\n      password: password\n    }\n\n    $scope.returnAccount = false;\n    $scope.return_feedback = \"\";\n\n    loginService.returnUserLogin(returnUserInfo).then(function(res){\n      if(res.accountCredentials === false){\n        $scope.returnAccount = true\n        $scope.return_feedback = \"**Incorrect email/pass combination**\";\n      } else {\n        $location.path(\"/home\");\n      }\n    })\n  }\n\n})\n","angular.module(\"toDoApp\").controller(\"mainController\", function($scope, mainService, loginService, $location){\n\n//function that hides and shows organization members on click using ng-class\n$scope.torf = true;\n\n$scope.hideOrg = function(){\n  if($scope.torf){\n    $scope.torf = false;\n  } else {\n    $scope.torf = true;\n  }\n}\n\n$scope.inputTodo = \"\";\n\n  $scope.updateTodo = function(todo){\n    mainService.updateTodo(todo).then(function(res){\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      $scope.getTodoList();\n    })\n  }\n\n  $scope.setCompleted = function(todo){\n    mainService.setCompleted(todo)\n  }\n\n  $scope.deleteTodo = function(id){\n    mainService.deleteTodo(id).then(function(res){\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      $scope.getTodoList();\n    });\n  }\n\n  $scope.deleteCompleted = function(){\n    // mainService.deleteCompleted($scope.toDoArray)\n    //   $scope.getTodoList();\n\n    for (var i = 0; i < $scope.toDoArray.length; i++) {\n      console.log($scope.toDoArray[i].completed);\n      if($scope.toDoArray[i].completed === true){\n      console.log(\"THIS WORKD\");\n      $scope.ar.push($scope.toDoArray[i])\n      console.log($scope.ar);\n      }\n    }\n  }\n\n  $scope.archiveCompleted = () => {\n    mainService.archiveCompleted($scope.toDoArray)\n    setTimeout(function () {\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      $scope.getTodoList();\n    }, 10);\n  }\n\n  $scope.addTodo = (todo) => {\n    $scope.inputTodo = \"\";\n    if(todo){\n      mainService.addTodo(todo)\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      setTimeout(function () {\n        $scope.getTodoList();\n      }, 10);\n      $scope.inputTodo = \"\";\n      console.log($scope.inputTodo);\n    }\n  }\n\n  $scope.toDoArray = [];\n  $scope.archivedArray = [];\n\n  $scope.getTodoList = function(){\n    mainService.getTodoList().then(function(res){\n\n    ////////// this for loop will push items in toDoArray and archivedArray /////////////\n      for (var i = 0; i < res.length; i++) {\n        if(res[i].archived === false){\n          $scope.toDoArray.push(res[i])\n        } else {\n          $scope.archivedArray.push(res[i])\n        }\n      }\n\n      $scope.todoTotal = $scope.toDoArray.length;\n      if($scope.todoTotal === 1) {\n        $scope.todoText = \"thing\"\n      } else {\n        $scope.todoText = \"things\"\n      }\n      $scope.archivedTotal = $scope.archivedArray.length;\n      if($scope.todoTotal === 1) {\n        $scope.archivedText = \"thing\"\n      } else {\n        $scope.archivedt = \"things\"\n      }\n    });\n  }\n\n  $scope.addLastItem = function(){\n    mainService.getTodoList().then(function(res){\n      $scope.toDoArray.push(res[res.length-1])\n      $scope.todoTotal++;\n    })\n  }\n\n  $scope.logoutUser = function(){\n    loginService.logoutUser().then(function(res){\n      $location.path(\"/\");\n    });\n  }\n\n  $scope.getUsername = function(){\n    loginService.getUsername().then(function(res){\n      $scope.userName = res.name_first;\n      $scope.userOrg = res.org_name;\n    })\n  }\n\n  $scope.getUsersInOrg = function(){\n    loginService.getUsersInOrg().then(function(res){\n      $scope.usersInOrg = res\n    })\n  }\n\n  $scope.getUsername(); //get username on load\n  $scope.getUsersInOrg(); //get users in organziation on load\n  $scope.getTodoList(); //get all todo's on page load\n\n})\n","angular.module(\"toDoApp\").service(\"loginService\", function($http){\n\n\n  this.createAccount = function(newUserInfo){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/createaccount\",\n      data: newUserInfo\n    }).then(function(res) {\n      return res.data\n    })\n  }\n\n  this.returnUserLogin = function(returnUserInfo){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/login\",\n      data: returnUserInfo\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.logoutUser = function(){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/logout\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getUsername = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/auth/getusername\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getUsersInOrg = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/auth/getusersinorg\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n})\n","angular.module(\"toDoApp\").service(\"mainService\", function($http){\n\n  this.addTodo = function(x){\n    var dataObj = {\n      todo: x,\n      completed: false,\n      archived: false\n    }\n\n    return $http({\n      method: \"POST\",\n      url: \"/api/todo\",\n      data: dataObj\n    }).success(function(){\n      console.log(\"successfully added to server\");\n    })\n  }\n\n  this.getTodoList = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/todo\"\n    }).then(function(response){\n      return response.data;\n    })\n  }\n\n  this.deleteTodo = function(todoId){\n    return $http({\n      method: \"DELETE\",\n      url: \"/api/todo/\" + todoId\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.deleteCompleted = function(toDoArray){\n\n    for (var i = 0; i < toDoArray.length; i++) {\n      if(toDoArray[i].completed === true){\n         $http({\n          method: \"DELETE\",\n          url: \"/api/deletecompleted/\" + toDoArray[i].id\n        }).then(function(res){\n          return res.data;\n        })\n      }\n    }\n  }\n\n  this.archiveCompleted = function(toDoArray){\n    for (var i = 0; i < toDoArray.length; i++) {\n      if(toDoArray[i].completed === true){\n        toDoArray[i].archived = true;\n\n        var setarchivetrue = {\n          archived: toDoArray[i].archived\n        }\n\n        $http({\n          method: \"PUT\",\n          url: \"/api/archivetodo/\" + toDoArray[i].id,\n          data: setarchivetrue\n        }).then(function(res){\n          return res.data;\n        })\n      }\n    }\n  }\n\n  this.setCompleted = function(todo){\n    todo.completed = !todo.completed;\n\n    if(todo.datecompleted){\n      todo.datecompleted = null;\n    } else {\n      todo.datecompleted = new Date()\n    }\n\n    var todoObj = {\n      completed: todo.completed,\n      datecompleted: todo.datecompleted\n    }\n\n    return $http({\n      method: \"PUT\",\n      url: \"/api/settodo/\" + todo.id,\n      data: todoObj\n    }).success(function(){\n        console.log(\"todo completed updated\");\n    })\n  }\n\n  this.updateTodo = function(todo){\n    // console.log(todo, \"updateTodo in service\");\n    let updatedObj = {\n      name: todo.name,\n      completed: false\n    }\n    return $http({\n      method: \"PUT\",\n      url: \"/api/todo/\" + todo.id,\n      data: updatedObj\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n})\n"]}