{"version":3,"sources":["app.js","controllers/loginController.js","controllers/mainController.js","services/loginService.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$scope","loginService","$location","createAccount","org_name","name_first","name_last","email","password","newUserInfo","emailExists","email_feedback","passNotMatch","pass_confirm_feedback","confirm_password","then","res","accountExists","path","returnUserLogin","returnUserInfo","returnAccount","return_feedback","accountCredentials","mainService","torf","hideOrg","updateTodo","todo","toDoArray","archivedArray","getTodoList","setCompleted","deleteTodo","id","deleteCompleted","i","length","console","log","completed","ar","push","archiveCompleted","setTimeout","addTodo","inputTodo","archived","todoTotal","todoText","archivedTotal","archivedText","addLastItem","logoutUser","getUsername","userName","userOrg","getUsersInOrg","usersInOrg","service","$http","method","data","x","dataObj","success","response","todoId","setarchivetrue","datecompleted","Date","todoObj","updatedObj","name"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module(\"toDoApp\", [\"ui.router\"])\n  .config(function($stateProvider, $urlRouterProvider){\n\n\n    $stateProvider\n      .state(\"login\", {\n        url: \"/\",\n        templateUrl: \"views/login.html\",\n        controller: \"loginController\"\n      })\n      .state(\"home\", {\n        url: \"/home\",\n        templateUrl: \"views/home.html\",\n        controller: \"mainController\"\n      })\n\n    $urlRouterProvider\n      .otherwise(\"/\")\n\n  })\n","angular.module(\"toDoApp\").controller(\"loginController\", function($scope, loginService, $location){\n\n\n$scope.createAccount = function(org_name, name_first, name_last, email, password){\n  let newUserInfo = {\n    org_name: org_name,\n    name_first: name_first,\n    name_last: name_last,\n    email: email,\n    password: password\n  }\n\n  $scope.emailExists = false;\n  $scope.email_feedback = \"\";\n  $scope.passNotMatch = false;\n  $scope.pass_confirm_feedback = \"\";\n\n  if(password != $scope.confirm_password){\n    // alert(\"Your passwords are not the same\")\n    $scope.passNotMatch = true;\n    $scope.pass_confirm_feedback = \"**Passwords must match**\";\n  } else {\n    loginService.createAccount(newUserInfo).then(function(res){\n      if(res.accountExists === true){\n        $scope.emailExists = true;\n        $scope.email_feedback = \"**Account already exists for that email address**\";\n      } else {\n        $location.path(\"/home\");\n      }\n    });\n  }\n}\n\n\n$scope.returnUserLogin = function(email, password){\n  let returnUserInfo = {\n    email: email,\n    password: password\n  }\n\n  $scope.returnAccount = false;\n  $scope.return_feedback = \"\";\n\n\n  loginService.returnUserLogin(returnUserInfo).then(function(res){\n    // console.log(res, \"response from loginService\");\n    if(res.accountCredentials === false){\n      $scope.returnAccount = true\n      $scope.return_feedback = \"**Incorrect email/pass combination**\";\n    } else {\n      $location.path(\"/home\");\n    }\n  })\n}\n\n})\n","angular.module(\"toDoApp\").controller(\"mainController\", function($scope, mainService, loginService, $location){\n\n//function that hides and shows organization members on click using ng-class\n$scope.torf = true;\n\n$scope.hideOrg = function(){\n  if($scope.torf){\n    $scope.torf = false;\n  } else {\n    $scope.torf = true;\n  }\n}\n\n\n//DONE --- create function that updates checked off todo with new name and sets completed to false when saved;\n//DONE --- change deletealltodo to an archivetodo function\n//DONE --- archivetodo pushes to an array?\n//DONE --- ng-if todo / archive pages\n//DONE --- on setcomplete function, set completed time to timenow\n//show timenow on hover of todo item (css)\n\n\n\n  $scope.updateTodo = function(todo){\n    mainService.updateTodo(todo).then(function(res){\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      $scope.getTodoList();\n    })\n  }\n\n  $scope.setCompleted = function(todo){\n    mainService.setCompleted(todo)\n  }\n\n  $scope.deleteTodo = function(id){\n    // console.log(id, \"deleted id from db\");\n    mainService.deleteTodo(id).then(function(res){\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      // console.log(res, \"alksdjgalsd\");\n      $scope.getTodoList();\n    });\n  }\n\n  $scope.deleteCompleted = function(){\n    // mainService.deleteCompleted($scope.toDoArray)\n    //   $scope.getTodoList();\n\n    for (var i = 0; i < $scope.toDoArray.length; i++) {\n      console.log($scope.toDoArray[i].completed);\n      if($scope.toDoArray[i].completed === true){\n      console.log(\"THIS WORKD\");\n      $scope.ar.push($scope.toDoArray[i])\n      console.log($scope.ar);\n      }\n    }\n  }\n\n  $scope.archiveCompleted = () => {\n    mainService.archiveCompleted($scope.toDoArray)\n    setTimeout(function () {\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      $scope.getTodoList();\n    }, 10);\n  }\n\n  $scope.addTodo = (todo) => {\n\n    if(todo){\n      mainService.addTodo(todo)\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      setTimeout(function () {\n        // $scope.addLastItem();\n        $scope.getTodoList();\n      }, 10);\n      $scope.inputTodo = \"\";\n    }\n  }\n\n\n  $scope.toDoArray = [];\n  $scope.archivedArray = [];\n\n  $scope.getTodoList = function(){\n    mainService.getTodoList().then(function(res){\n\n    ////////// this for loop will push items in toDoArray and archivedArray /////////////\n\n      for (var i = 0; i < res.length; i++) {\n        if(res[i].archived === false){\n          // console.log(\"toDoArray being pushed\");\n          $scope.toDoArray.push(res[i])\n        } else {\n          // console.log('archivedArray being pushed');\n          $scope.archivedArray.push(res[i])\n        }\n      }\n      // console.log($scope.toDoArray);\n\n      $scope.todoTotal = $scope.toDoArray.length;\n\n      if($scope.todoTotal === 1) {\n        $scope.todoText = \"thing\"\n      } else {\n        $scope.todoText = \"things\"\n      }\n      $scope.archivedTotal = $scope.archivedArray.length;\n      if($scope.todoTotal === 1) {\n        $scope.archivedText = \"thing\"\n      } else {\n        $scope.archivedText = \"things\"\n      }\n    });\n  }\n\n\n  $scope.addLastItem = function(){\n    mainService.getTodoList().then(function(res){\n      // console.log(\"addLastItem\");\n      $scope.toDoArray.push(res[res.length-1])\n      $scope.todoTotal++;\n    })\n  }\n\n  $scope.logoutUser = function(){\n    // console.log(\"logout clicked\");\n    loginService.logoutUser().then(function(res){\n      $location.path(\"/\");\n    });\n  }\n\n  $scope.getUsername = function(){\n    loginService.getUsername().then(function(res){\n      // console.log(res, \"in controller\");\n      $scope.userName = res.name_first;\n      $scope.userOrg = res.org_name;\n    })\n  }\n\n  $scope.getUsersInOrg = function(){\n    loginService.getUsersInOrg().then(function(res){\n      // console.log(res, \"in controller\");\n      $scope.usersInOrg = res\n    })\n  }\n\n\n  $scope.getUsername(); //get username on load\n  $scope.getUsersInOrg(); //get users in organziation on load\n  $scope.getTodoList(); //get all todo's on page load\n\n\n})\n","angular.module(\"toDoApp\").service(\"loginService\", function($http){\n\n\n  this.createAccount = function(newUserInfo){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/createaccount\",\n      data: newUserInfo\n    }).then(function(res) {\n      return res.data\n    })\n  }\n\n  this.returnUserLogin = function(returnUserInfo){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/login\",\n      data: returnUserInfo\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.logoutUser = function(){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/logout\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getUsername = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/auth/getusername\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getUsersInOrg = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/auth/getusersinorg\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n})\n","angular.module(\"toDoApp\").service(\"mainService\", function($http){\n\n  this.addTodo = function(x){\n    // console.log(x, \"in service\");\n\n    var dataObj = {\n      todo: x,\n      completed: false,\n      archived: false\n    }\n    return $http({\n      method: \"POST\",\n      url: \"/api/todo\",\n      data: dataObj\n    }).success(function(){\n      console.log(\"successfully added to server\");\n    })\n  }\n\n  this.getTodoList = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/todo\"\n    }).then(function(response){\n      return response.data;\n    })\n  }\n\n  this.deleteTodo = function(todoId){\n    return $http({\n      method: \"DELETE\",\n      url: \"/api/todo/\" + todoId\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.deleteCompleted = function(toDoArray){\n\n    for (var i = 0; i < toDoArray.length; i++) {\n      if(toDoArray[i].completed === true){\n        console.log(toDoArray[i].id, \"THIS IS DONE\");\n         $http({\n          method: \"DELETE\",\n          url: \"/api/deletecompleted/\" + toDoArray[i].id\n        }).then(function(res){\n          console.log(res.data, \"innnnn\");\n          return res.data;\n        })\n      }\n    }\n  }\n\n  this.archiveCompleted = function(toDoArray){\n\n    for (var i = 0; i < toDoArray.length; i++) {\n      if(toDoArray[i].completed === true){\n        toDoArray[i].archived = true;\n\n        var setarchivetrue = {\n          archived: toDoArray[i].archived\n        }\n\n        // console.log(setarchivetrue, \"in service again\");\n\n        $http({\n          method: \"PUT\",\n          url: \"/api/archivetodo/\" + toDoArray[i].id,\n          data: setarchivetrue\n        }).then(function(res){\n          // console.log(res, \"response in service\");\n        })\n      }\n    }\n  }\n\n\n  this.setCompleted = function(todo){\n\n    todo.completed = !todo.completed;\n\n    if(todo.datecompleted){\n      todo.datecompleted = null;\n    } else {\n      todo.datecompleted = new Date()\n    }\n\n    var todoObj = {\n      completed: todo.completed,\n      datecompleted: todo.datecompleted\n    }\n\n    return $http({\n      method: \"PUT\",\n      url: \"/api/settodo/\" + todo.id,\n      data: todoObj\n    }).success(function(){\n        console.log(\"todo completed updated\");\n    })\n  }\n\n\n  this.updateTodo = function(todo){\n    // console.log(todo, \"updateTodo in service\");\n    let updatedObj = {\n      name: todo.name,\n      completed: false\n    }\n    return $http({\n      method: \"PUT\",\n      url: \"/api/todo/\" + todo.id,\n      data: updatedObj\n    }).then(function(res){\n      // console.log(res, \"updateTodo worked\");\n    })\n  }\n\n\n})\n"]}