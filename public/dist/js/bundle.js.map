{"version":3,"sources":["app.js","controllers/loginController.js","controllers/mainController.js","services/loginService.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$scope","loginService","$location","createAccount","org_name","name_first","name_last","email","password","newUserInfo","confirm_password","alert","then","res","path","returnUserLogin","returnUserInfo","length","mainService","torf","hideOrg","updateTodo","todo","toDoArray","archivedArray","getTodoList","setCompleted","deleteTodo","id","deleteCompleted","i","console","log","completed","ar","push","archiveCompleted","setTimeout","addTodo","inputTodo","archived","todoTotal","archivedTotal","addLastItem","logoutUser","getUsername","userName","userOrg","getUsersInOrg","usersInOrg","service","$http","method","data","arrrrr","x","dataObj","success","response","todoId","setarchivetrue","todocompleted","updatedObj","name"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module(\"toDoApp\", [\"ui.router\"])\n  .config(function($stateProvider, $urlRouterProvider){\n\n\n    $stateProvider\n      .state(\"login\", {\n        url: \"/\",\n        templateUrl: \"views/login.html\",\n        controller: \"loginController\"\n      })\n      .state(\"home\", {\n        url: \"/home\",\n        templateUrl: \"views/home.html\",\n        controller: \"mainController\"\n      })\n\n    $urlRouterProvider\n      .otherwise(\"/\")\n\n  })\n","angular.module(\"toDoApp\").controller(\"loginController\", function($scope, loginService, $location){\n\n\n$scope.createAccount = function(org_name, name_first, name_last, email, password){\n  let newUserInfo = {\n    org_name: org_name,\n    name_first: name_first,\n    name_last: name_last,\n    email: email,\n    password: password\n  }\n\n  if(password != $scope.confirm_password){\n    alert(\"Your passwords are not the same\")\n  } else {\n    loginService.createAccount(newUserInfo).then(function(res){\n      $location.path(\"/home\")\n    });\n  }\n}\n\n$scope.returnUserLogin = function(email, password){\n  let returnUserInfo = {\n    email: email,\n    password: password\n  }\n\n\n  loginService.returnUserLogin(returnUserInfo).then(function(res){\n    // console.log(res, \"response from loginService\");\n    if(res.length < 1){\n      alert(\"incorrect email/password\")\n    } else {\n      $location.path(\"/home\");\n    }\n  })\n}\n\n})\n","angular.module(\"toDoApp\").controller(\"mainController\", function($scope, mainService, loginService, $location){\n\n//function that hides and shows organization members on click using ng-class\n$scope.torf = true;\n\n$scope.hideOrg = function(){\n  if($scope.torf){\n    $scope.torf = false;\n  } else {\n    $scope.torf = true;\n  }\n}\n\n\n//DONE --- create function that updates checked off todo with new name and sets completed to false when saved;\n//DONE --- change deletealltodo to an archivetodo function\n//DONE --- archivetodo pushes to an array?\n//DONE --- ng-if todo / archive pages\n//DONE --- on setcomplete function, set completed time to timenow\n//show timenow on hover of todo item (css)\n\n\n\n  $scope.updateTodo = function(todo){\n    mainService.updateTodo(todo).then(function(res){\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      $scope.getTodoList();\n    })\n  }\n\n  $scope.setCompleted = function(todo){\n    mainService.setCompleted(todo)\n  }\n\n  $scope.deleteTodo = function(id){\n    // console.log(id, \"deleted id from db\");\n    mainService.deleteTodo(id).then(function(res){\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      // console.log(res, \"alksdjgalsd\");\n      $scope.getTodoList();\n    });\n  }\n\n  $scope.deleteCompleted = function(){\n    // mainService.deleteCompleted($scope.toDoArray)\n    //   $scope.getTodoList();\n\n    for (var i = 0; i < $scope.toDoArray.length; i++) {\n      console.log($scope.toDoArray[i].completed);\n      if($scope.toDoArray[i].completed === true){\n      console.log(\"THIS WORKD\");\n      $scope.ar.push($scope.toDoArray[i])\n      console.log($scope.ar);\n      }\n    }\n  }\n\n  $scope.archiveCompleted = () => {\n    mainService.archiveCompleted($scope.toDoArray)\n    setTimeout(function () {\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      $scope.getTodoList();\n    }, 10);\n  }\n\n  $scope.addTodo = (todo) => {\n\n    if(todo){\n      mainService.addTodo(todo)\n      $scope.toDoArray = [];\n      $scope.archivedArray = [];\n      setTimeout(function () {\n        // $scope.addLastItem();\n        $scope.getTodoList();\n      }, 10);\n      $scope.inputTodo = \"\";\n    }\n  }\n\n\n  $scope.toDoArray = [];\n  $scope.archivedArray = [];\n\n  $scope.getTodoList = function(){\n    mainService.getTodoList().then(function(res){\n\n    ////////// this for loop will push items in toDoArray and archivedArray /////////////\n\n      for (var i = 0; i < res.length; i++) {\n        if(res[i].archived === false){\n          // console.log(\"toDoArray being pushed\");\n          $scope.toDoArray.push(res[i])\n        } else {\n          // console.log('archivedArray being pushed');\n          $scope.archivedArray.push(res[i])\n        }\n      }\n      // console.log($scope.toDoArray);\n\n      $scope.todoTotal = $scope.toDoArray.length;\n      $scope.archivedTotal = $scope.archivedArray.length;\n    });\n  }\n\n\n  $scope.addLastItem = function(){\n    mainService.getTodoList().then(function(res){\n      // console.log(\"addLastItem\");\n      $scope.toDoArray.push(res[res.length-1])\n      $scope.todoTotal++;\n    })\n  }\n\n  $scope.logoutUser = function(){\n    // console.log(\"logout clicked\");\n    loginService.logoutUser().then(function(res){\n      $location.path(\"/\");\n    });\n  }\n\n  $scope.getUsername = function(){\n    loginService.getUsername().then(function(res){\n      // console.log(res, \"in controller\");\n      $scope.userName = res.name_first;\n      $scope.userOrg = res.org_name;\n    })\n  }\n\n  $scope.getUsersInOrg = function(){\n    loginService.getUsersInOrg().then(function(res){\n      // console.log(res, \"in controller\");\n      $scope.usersInOrg = res\n    })\n  }\n\n\n  $scope.getUsername(); //get username on load\n  $scope.getUsersInOrg(); //get users in organziation on load\n  $scope.getTodoList(); //get all todo's on page load\n\n\n})\n","angular.module(\"toDoApp\").service(\"loginService\", function($http){\n\n\n  this.createAccount = function(newUserInfo){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/createaccount\",\n      data: newUserInfo\n    }).then(function(res) {\n      // console.log(res, \"createaccount\");\n      return res.data\n    })\n  }\n\n  this.returnUserLogin = function(returnUserInfo){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/login\",\n      data: returnUserInfo\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.logoutUser = function(){\n    return $http({\n      method: \"POST\",\n      url: \"/api/auth/logout\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getUsername = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/auth/getusername\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getUsersInOrg = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/auth/getusersinorg\"\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n})\n","angular.module(\"toDoApp\").service(\"mainService\", function($http){\n\n  var arrrrr = [\"wash hands\", \"buy clothes\"];\n\n  this.addTodo = function(x){\n    // console.log(x, \"in service\");\n\n    var dataObj = {\n      todo: x,\n      completed: false,\n      archived: false\n    }\n    return $http({\n      method: \"POST\",\n      url: \"/api/todo\",\n      data: dataObj\n    }).success(function(){\n      console.log(\"successfully added to server\");\n    })\n  }\n\n  this.getTodoList = function(){\n    return $http({\n      method: \"GET\",\n      url: \"/api/todo\"\n    }).then(function(response){\n      return response.data;\n    })\n  }\n\n  this.deleteTodo = function(todoId){\n    return $http({\n      method: \"DELETE\",\n      url: \"/api/todo/\" + todoId\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.deleteCompleted = function(toDoArray){\n\n    for (var i = 0; i < toDoArray.length; i++) {\n      if(toDoArray[i].completed === true){\n        console.log(toDoArray[i].id, \"THIS IS DONE\");\n         $http({\n          method: \"DELETE\",\n          url: \"/api/deletecompleted/\" + toDoArray[i].id\n        }).then(function(res){\n          console.log(res.data, \"innnnn\");\n          return res.data;\n        })\n      }\n    }\n  }\n\n  this.archiveCompleted = function(toDoArray){\n\n    for (var i = 0; i < toDoArray.length; i++) {\n      if(toDoArray[i].completed === true){\n        toDoArray[i].archived = true;\n\n        var setarchivetrue = {\n          archived: toDoArray[i].archived\n        }\n\n        // console.log(setarchivetrue, \"in service again\");\n\n        $http({\n          method: \"PUT\",\n          url: \"/api/archivetodo/\" + toDoArray[i].id,\n          data: setarchivetrue\n        }).then(function(res){\n          // console.log(res, \"response in service\");\n        })\n      }\n    }\n  }\n\n\n  this.setCompleted = function(todo){\n    // console.log(todo.completed, \"set completed to true / false in service\");\n    if(todo.completed === false){\n      todo.completed = true;\n    } else {\n      todo.completed = false;\n    }\n\n    let todocompleted = {\n      completed: todo.completed\n    };\n    return $http({\n      method: \"PUT\",\n      url: \"/api/settodo/\" + todo.id,\n      data: todocompleted\n    }).success(function(){\n        console.log(\"todo completed updated\");\n    })\n  }\n\n\n  this.updateTodo = function(todo){\n    // console.log(todo, \"updateTodo in service\");\n    let updatedObj = {\n      name: todo.name,\n      completed: false\n    }\n    return $http({\n      method: \"PUT\",\n      url: \"/api/todo/\" + todo.id,\n      data: updatedObj\n    }).then(function(res){\n      // console.log(res, \"updateTodo worked\");\n    })\n  }\n\n\n})\n"]}